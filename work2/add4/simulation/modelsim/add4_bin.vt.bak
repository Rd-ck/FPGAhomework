// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "02/15/2022 21:36:16"
                                                                                
// Verilog Test Bench template for design : add4_bin
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps
module add4_bin_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
integer i,j;
reg cin;
reg [3:0] ina;
reg [3:0] inb;
// wires                                               
wire cout;
wire [3:0]  sum;

// assign statements (if any)                          
add4_bin i1 (
// port map - connection between master ports and signals/registers   
	.cin(cin),
	.cout(cout),
	.ina(ina),
	.inb(inb),
	.sum(sum)
);
always #5 cin=~cin;
initial                                                
begin                                                  
	ina=0;inb=0;cin=0;
	for(i=1;i<16;i=i+1)
	#10 ina=i;
end 
initial                                                
begin 
	for(j=1;j<16;j=j+1)
	#10 inb=j;
//end  
/*initial                                                
begin
	$monitor($time,,,"%d+%d+%b={%b,%d}",ina,inb,cin,cout,sum);
	#160 $finsih;
end 
*/

// --> end                                             
$display("Running testbench");         
//#160 $stop;              
end                                                 
endmodule

